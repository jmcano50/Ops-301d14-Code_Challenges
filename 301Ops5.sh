#!/bin/bash

# Script Name:                  Ops Challenge: Clearing Logs
# Author:                       Juan Miguel Cano
# Date of latest revision:      12/01/2023
# Purpose:                      Create a fake log, compresses it, clears its contents, 
# cont:                         and prints info on the compression process.
# Execution:                    bash 301Ops5.sh
# Resources:                    

touch "my-log-file.txt"
echo "Pinto Bean for Dogs generated by Juan ... ">> my-log-file.txt
cat my-log-file.txt
mkdir "backups"
LOG_FILES=(m-log-file.txt)
BACKUP_DIR="BACKUPS"
TIMESTAMP=$(date +"%m%d%Y)

for file in  "${LOG_FILES[@]}"; do
    # ...
done

FILE_SIZE=$(wc -c "$file") | awk '{print $1}')
zip -r "$BACKUP_DIR/$FILE_NAME-$TIMESTAMP.ZIP" "$file"
cat /dev/null > "$file"
COMPRESSED_FILE_SIZE=$(WC -C "$BACKUP_DIR/$FILE_NAME-$TIMESTAMP.zip" | awk '{print $1}')

echo "File size before compression: $FILE_SIZE"
echo "File size after compression: $COMPRESSED_FILE_SIZE"

IF [[ $FILE_SIZE -gt $COMPRESSED_FILE_SIZE ]]; then
    echo "Compression successful: compressed file size is smaller than original file size"
else
    echo "Compression unsuccessful: compressed file size is larger than original file size:

    done